#include <iostream>
using namespace std;

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;
    
    // Создание временных массивов
    int* leftArr = new int[n1];
    int* rightArr = new int[n2];
    
    // Копирование данных во временные массивы
    for (int i = 0; i < n1; i++)
        leftArr[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        rightArr[j] = arr[mid + 1 + j];
    
    // Слияние временных массивов обратно в arr[]
    int i = 0, j = 0, k = left;
    while (i < n1 && j < n2) {
        if (leftArr[i] <= rightArr[j]) {
            arr[k] = leftArr[i];
            i++;
        } else {
            arr[k] = rightArr[j];
            j++;
        }
        k++;
    }
    
    // Копирование оставшихся элементов
    while (i < n1) {
        arr[k] = leftArr[i];
        i++; k++;
    }
    while (j < n2) {
        arr[k] = rightArr[j];
        j++; k++;
    }
    
    delete[] leftArr;
    delete[] rightArr;
}

void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        
        // Рекурсивная сортировка двух половин
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);
        
        // Слияние отсортированных половин
        merge(arr, left, mid, right);
    }
}

int main() {
    int arr[] = {38, 27, 43, 3, 9, 82, 10};
    int size = sizeof(arr) / sizeof(arr[0]);
    
    cout << "Исходный массив: ";
    for (int i = 0; i < size; i++) cout << arr[i] << " ";
    cout << endl;
    
    mergeSort(arr, 0, size - 1);
    
    cout << "Отсортированный массив: ";
    for (int i = 0; i < size; i++) cout << arr[i] << " ";
    
    return 0;
}

Исходный массив: 38 27 43 3 9 82 10 
Отсортированный массив: 3 9 10 27 38 43 82
